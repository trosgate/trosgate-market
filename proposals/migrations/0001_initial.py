# Generated by Django 4.1.9 on 2023-09-21 14:50

from django.conf import settings
import django.core.files.storage
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import proposals.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('title', models.CharField(help_text='title field is Required', max_length=255, unique=True, verbose_name='Title')),
                ('slug', models.SlugField(max_length=255, verbose_name='Slug')),
                ('preview', models.CharField(error_messages={'name': {'max_length': 'Preview field is required with maximum of 250 characters'}}, max_length=255, verbose_name='Preview')),
                ('sample_link', models.URLField(blank=True, help_text='the link must be a verified url', max_length=2083, null=True, verbose_name='Sample Website')),
                ('status', models.CharField(choices=[('review', 'Review'), ('active', 'Active'), ('modify', 'Modify'), ('archived', 'Archived')], default='active', max_length=20, verbose_name='Status')),
                ('description', models.TextField(error_messages={'name': {'max_length': 'Description field is required'}}, max_length=3500, verbose_name='Description')),
                ('service_level', models.CharField(choices=[('basic', 'Basic'), ('standard', 'Standard'), ('premium', 'Premium')], default='basic', error_messages={'name': {'max_length': 'Service Level field is required'}}, max_length=20, verbose_name='Service Level')),
                ('reference', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('published', models.BooleanField(choices=[(False, 'Unfeature'), (True, 'Feature')], default=False, verbose_name='Featured')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('salary', models.IntegerField(error_messages={'amount': {'max_length': 'Set the salary for this proposal'}}, verbose_name='Price')),
                ('revision', models.PositiveIntegerField(choices=[(1, '1 Time'), (2, '2 Times'), (3, '3 Times'), (4, '4 Times'), (5, '5 Times'), (6, '6 Times'), (7, '7 Times')], default=1, verbose_name='Revision')),
                ('duration', models.PositiveIntegerField(choices=[(1, '01 Day'), (2, '02 Days'), (3, '03 Days'), (4, '04 Days'), (5, '05 Days'), (6, '06 Days'), (7, '01 Week'), (14, '02 Weeks'), (21, '03 Weeks'), (30, '01 Month')], default=3, verbose_name='Duration')),
                ('duration_time', models.DateTimeField(blank=True, help_text='deadline for expiration of project', null=True, verbose_name='Duration Time')),
                ('thumbnail', models.ImageField(help_text="image must be any of these 'JPEG','JPG','PNG','PSD', and dimension 820x312", upload_to=proposals.models.proposal_images_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['JPG', 'JPEG', 'PNG', 'PSD'])], verbose_name='Thumbnail')),
                ('faq_one', models.CharField(max_length=100, verbose_name='FAQ #1')),
                ('faq_one_description', models.TextField(max_length=255, verbose_name='FAQ #1 Details')),
                ('faq_two', models.CharField(blank=True, max_length=100, null=True, verbose_name='FAQ #2')),
                ('faq_two_description', models.TextField(blank=True, max_length=255, null=True, verbose_name='FAQ #2 Details')),
                ('faq_three', models.CharField(blank=True, max_length=100, null=True, verbose_name='FAQ #3')),
                ('faq_three_description', models.TextField(blank=True, max_length=255, null=True, verbose_name='FAQ #3 Details')),
                ('digital', models.BooleanField(choices=[(False, 'No'), (True, 'Yes')], default=False, verbose_name='Digital Product')),
                ('pricing', models.BooleanField(choices=[(False, 'No'), (True, 'Yes')], default=True, verbose_name='Tier Pricing')),
                ('pricing_tier', models.CharField(choices=[('basic', 'Basic'), ('standard', 'Standard'), ('premium', 'Premium')], default='basic', max_length=30, verbose_name='Pricing Tier')),
                ('salary_tier1', models.PositiveIntegerField(default=0, verbose_name='Price Tier1')),
                ('salary_tier2', models.PositiveIntegerField(default=0, verbose_name='Price Tier2')),
                ('salary_tier3', models.PositiveIntegerField(default=0, verbose_name='Price Tier3')),
                ('tier1_preview', models.CharField(blank=True, default='Features for Basic package', max_length=80, null=True, verbose_name='Package 1 preview')),
                ('tier2_preview', models.CharField(blank=True, default='Features for Standard package', max_length=80, null=True, verbose_name='Package 2 preview')),
                ('tier3_preview', models.CharField(blank=True, default='Features for Premium package', max_length=80, null=True, verbose_name='Package 3 preview')),
                ('revision_tier1', models.PositiveIntegerField(choices=[(1, '1 Time'), (2, '2 Times'), (3, '3 Times'), (4, '4 Times'), (5, '5 Times'), (6, '6 Times'), (7, '7 Times')], default=1, verbose_name='Revision Tier1')),
                ('revision_tier2', models.PositiveIntegerField(choices=[(1, '1 Time'), (2, '2 Times'), (3, '3 Times'), (4, '4 Times'), (5, '5 Times'), (6, '6 Times'), (7, '7 Times')], default=3, verbose_name='Revision Tier2')),
                ('revision_tier3', models.PositiveIntegerField(choices=[(1, '1 Time'), (2, '2 Times'), (3, '3 Times'), (4, '4 Times'), (5, '5 Times'), (6, '6 Times'), (7, '7 Times')], default=7, verbose_name='Revision Tier3')),
                ('pricing1_duration', models.PositiveIntegerField(choices=[(1, '01 Day'), (2, '02 Days'), (3, '03 Days'), (4, '04 Days'), (5, '05 Days'), (6, '06 Days'), (7, '01 Week'), (14, '02 Weeks'), (21, '03 Weeks'), (30, '01 Month')], default=3, verbose_name='Duration Tier1')),
                ('pricing2_duration', models.PositiveIntegerField(choices=[(1, '01 Day'), (2, '02 Days'), (3, '03 Days'), (4, '04 Days'), (5, '05 Days'), (6, '06 Days'), (7, '01 Week'), (14, '02 Weeks'), (21, '03 Weeks'), (30, '01 Month')], default=5, verbose_name='Duration Tier2')),
                ('pricing3_duration', models.PositiveIntegerField(choices=[(1, '01 Day'), (2, '02 Days'), (3, '03 Days'), (4, '04 Days'), (5, '05 Days'), (6, '06 Days'), (7, '01 Week'), (14, '02 Weeks'), (21, '03 Weeks'), (30, '01 Month')], default=7, verbose_name='Duration Tier3')),
            ],
            options={
                'verbose_name': 'Proposal',
                'verbose_name_plural': 'Proposals',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ProposalChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('sent_on', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['sent_on'],
            },
        ),
        migrations.CreateModel(
            name='ProposalProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Product License')),
                ('product_type', models.BooleanField(choices=[(False, 'Free Download'), (True, 'Premium Download')], verbose_name='Product Type')),
                ('status', models.BooleanField(choices=[(False, 'Not Active'), (True, 'Active')], verbose_name='Status')),
                ('attachment', models.FileField(help_text="image must be any of these 'ZIP', 'RAR','JPEG','JPG','PNG','PSD'", storage=django.core.files.storage.FileSystemStorage(location='C:\\Users\\kateygh\\Desktop\\multitenants\\attachments/'), upload_to=proposals.models.product_storage, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['ZIP', 'RAR', 'JPG', 'JPEG', 'PNG', 'PSD'])], verbose_name='Attachment')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('price', models.PositiveIntegerField(blank=True, null=True, verbose_name='Custom Price')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('merchant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.merchant', verbose_name='Merchant')),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='proposals.proposal', verbose_name='Proposal')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ('created_at',),
            },
        ),
    ]
