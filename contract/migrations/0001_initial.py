# Generated by Django 4.1.9 on 2023-09-21 14:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('contract_duration', models.PositiveIntegerField(choices=[(1, '01 Day'), (2, '02 Days'), (3, '03 Days'), (4, '04 Days'), (5, '05 Days'), (6, '06 Days'), (7, '01 Week'), (14, '02 Weeks'), (21, '03 Weeks'), (30, '01 Month'), (60, '02 Months'), (90, '03 Months'), (120, '04 Months'), (150, '05 Months'), (180, '06 Months')], default=3, verbose_name='Duration')),
                ('contract_type', models.CharField(choices=[('internal', 'Internal'), ('external', 'External')], default='internal', max_length=20, verbose_name='Contract Type')),
                ('reaction', models.CharField(choices=[('awaiting', 'Awaiting'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('paid', 'Paid')], default='awaiting', max_length=30, verbose_name='State')),
                ('notes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Instruction(Optional)')),
                ('reference', models.CharField(blank=True, max_length=100, unique=True, verbose_name='Reference')),
                ('slug', models.SlugField(max_length=150, null=True, verbose_name='Slug')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('line_one', models.CharField(help_text='Enter your main product or service here', max_length=120, verbose_name='Service Description')),
                ('line_one_quantity', models.PositiveIntegerField(default=0, verbose_name='Quantity')),
                ('line_one_unit_price', models.PositiveIntegerField(default=0, verbose_name='Unit Price')),
                ('line_one_total_price', models.PositiveIntegerField(default=0, verbose_name='Total')),
                ('line_two', models.CharField(blank=True, default=None, max_length=120, null=True, verbose_name='Service Extras One')),
                ('line_two_quantity', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Quantity')),
                ('line_two_unit_price', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Unit Price')),
                ('line_two_total_price', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Total')),
                ('line_three', models.CharField(blank=True, default=None, max_length=120, null=True, verbose_name='Service Extras Two')),
                ('line_three_quantity', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Quantity')),
                ('line_three_unit_price', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Unit Price')),
                ('line_three_total_price', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Total')),
                ('line_four', models.CharField(blank=True, default=None, max_length=120, null=True, verbose_name='Service Extras Three')),
                ('line_four_quantity', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Quantity')),
                ('line_four_unit_price', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Unit Price')),
                ('line_four_total_price', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Total')),
                ('line_five', models.CharField(blank=True, default=None, max_length=120, null=True, verbose_name='Service Extras Four')),
                ('line_five_quantity', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Quantity')),
                ('line_five_unit_price', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Unit Price')),
                ('line_five_total_price', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Total')),
                ('grand_total', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Grand Total')),
            ],
            options={
                'verbose_name': 'Contract',
                'verbose_name_plural': 'Contract',
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='ContractChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('sent_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Contract Chat',
                'verbose_name_plural': 'Contract Chat',
                'ordering': ['sent_on'],
            },
        ),
        migrations.CreateModel(
            name='Contractor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(help_text='Enter an official name known for the client', max_length=100)),
                ('email', models.CharField(help_text='Enter Valid Email for client to receive mail', max_length=100, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contractors', to=settings.AUTH_USER_MODEL, verbose_name='Invitee')),
                ('merchant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.merchant', verbose_name='Merchant')),
            ],
            options={
                'verbose_name': 'External Client',
                'verbose_name_plural': 'External Client',
                'ordering': ['-date_created'],
            },
        ),
    ]
