# Generated by Django 3.2.8 on 2023-03-06 10:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
        ('account', '0002_alter_customer_managers'),
    ]

    operations = [
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(help_text='package type can be eg. BASIC', max_length=50, unique=True, verbose_name='Package Type')),
                ('verbose_type', models.CharField(blank=True, help_text='Customize name for the package. If empty, the default names will be displayed', max_length=50, null=True, unique=True, verbose_name='Branded Name')),
                ('max_member_per_team', models.PositiveIntegerField(default=1, help_text='You can only add up to 4 members for the biggest package', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Max member Per Team')),
                ('monthly_offer_contracts_per_team', models.PositiveIntegerField(default=0, help_text="Clients can view team member's profile and send offer Contracts up to 100 monthly", validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Monthly Offer Contracts')),
                ('max_proposals_allowable_per_team', models.PositiveIntegerField(default=5, help_text='You can add min of 5 and max of 50 Proposals per Team', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(50)], verbose_name='Max Proposals Per Team')),
                ('monthly_projects_applicable_per_team', models.PositiveIntegerField(default=10, help_text='Monthly Jobs Applications with min of 5 and max 50', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(50)], verbose_name='Monthly Applications Per Team')),
                ('daily_Handshake_mails_to_clients', models.PositiveIntegerField(default=0, help_text='New feature Coming Soon: Here, freelancer team can send followup/ reminder mail per external contract to client. Daily sending will have min of 1 amd max is 3 mails', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3)], verbose_name='Daily Contract Mail reminder')),
                ('price', models.PositiveIntegerField(default=0, help_text='Decide your reasonable price with max limit of 1000', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)], verbose_name='Package Price')),
                ('status', models.CharField(choices=[('starter', 'Starter'), ('standard', 'Standard'), ('latest', 'Latest')], default='starter', max_length=20, verbose_name='Package Label')),
                ('is_default', models.BooleanField(choices=[(False, 'No'), (True, 'Yes')], default=False, help_text="Only 1 package should have a default set to 'Yes'", verbose_name='Make Default')),
                ('ordering', models.PositiveIntegerField(default=1, help_text='This determines how each package will appear to user eg, 1 means first position', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)], verbose_name='Display')),
            ],
            options={
                'ordering': ['ordering'],
            },
        ),
        migrations.AlterModelManagers(
            name='customer',
            managers=[
            ],
        ),
        migrations.RemoveField(
            model_name='customer',
            name='site',
        ),
        migrations.CreateModel(
            name='Merchant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Business Name')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='Last Login')),
                ('merchant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='merchant', to=settings.AUTH_USER_MODEL)),
                ('site', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'verbose_name': 'Access Token',
                'verbose_name_plural': 'Access Token',
                'ordering': ('-last_login',),
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.merchant'),
        ),
    ]
